<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:n="clr-namespace:dotPad.Controls"
                    xmlns:c="clr-namespace:dotPad.Converter"
                    >

    <c:MultiLineTitleConverter x:Key="MultiLineTitleConverter"/>

    <Style BasedOn="{StaticResource {x:Type RadioButton}}" TargetType="{x:Type n:ExtendedRadioButton}">
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource Element.Foreground}"/>
        <Setter Property="Padding" Value="3,1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{DynamicResource Style.FocusVisual.NoMargin}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type n:ExtendedRadioButton}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="1" Padding="{TemplateBinding Padding}">
                        <Grid MinHeight="{TemplateBinding MinHeight}" SnapsToDevicePixels="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Border Grid.Row="0" Grid.Column="0" Margin="2,0"
                                    Height="{TemplateBinding ContentHeight}" Width="{TemplateBinding ContentWidth}" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Image Source="{TemplateBinding Icon}"/>
                            </Border>

                            <TextBlock Grid.Column="1" MaxWidth="{Binding Path=ActualWidth,RelativeSource={RelativeSource TemplatedParent}}" 
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
                                       VerticalAlignment="Center" Text="{TemplateBinding Text, Converter={StaticResource MultiLineTitleConverter}}" 
                                       TextWrapping="{TemplateBinding TextWrapping}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="True"/>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>

                <MultiTrigger.Setters>
                    <Setter Property="BorderBrush" Value="{DynamicResource Element.Border.Pressed}"/>
                    <Setter Property="Background" Value="{DynamicResource Element.Background.Pressed}"/>
                </MultiTrigger.Setters>
            </MultiTrigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#D3D7D8"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="#73847E"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#73847E"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <DrawingBrush x:Key="Vector.FIconBrush">
        <DrawingBrush.Drawing>
            <GeometryDrawing Brush="Black">
                <GeometryDrawing.Geometry>
                    <GeometryGroup>
                        <!-- Vertical bar -->
                        <RectangleGeometry Rect="0,0,20,100"/>
                        <!-- Horizontal bar -->
                        <RectangleGeometry Rect="0,40,60,20"/>
                    </GeometryGroup>
                </GeometryDrawing.Geometry>
            </GeometryDrawing>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    
    
</ResourceDictionary>